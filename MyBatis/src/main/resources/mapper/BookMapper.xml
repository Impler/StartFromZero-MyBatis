<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mybatis.dao.BookDao">

	<resultMap id="author" type="author">
		<id column="author_id" property="id" />
		<result column="author_name" property="name" />
		<result column="author_country" property="country" />
	</resultMap>
	
	<resultMap type="post" id="post">
		<id column="post_id" property="id" />
		<result column="post_username" property="username"/>
		<result column="post_content" property="postContent"/>
	</resultMap>
	
	<resultMap type="book" id="baseBook">
		<id column="book_id" property="id" />
		<result column="book_name" property="name" />
		<result column="book_description" property="description" />
		<result column="book_publish_date" property="publishDate" />
	</resultMap>
	<!-- 
		级联查询
		Mybatis实现has-a级联查询有两种方式：
		1 内嵌select：执行其他映射sql查询级联数据
		2 内嵌result：使用连接查询级联数据
	 -->
	 <!-- 
	 	1 内嵌select 
	 	会引起N+1问题，为每条结果集多执行一条sql查询级联数据。可以采用fetchType="lazy"的策略
	 -->
	<resultMap type="book" id="bookAndAuthorByNestedSelect" extends="baseBook">
		<association column="author_id" property="author" select="selectAuthorById"/>
	</resultMap>

	<select id="selectAuthorById" resultMap="author">
		select * from t_author where author_id = #{id}
	</select>
	<select id="selectBookAndAuthorByNestedSelect" resultMap="bookAndAuthorByNestedSelect">
		select * from t_book where book_id = #{id};
	</select>
	
	<!-- 
		2 内嵌result：
	 -->
	<resultMap type="book" id="bookAndAuthorByNestedResult" extends="baseBook">
		<association property="author" resultMap="author"/>
	</resultMap>
	<select id="selectBookAndAuthorByNestedResult" resultMap="bookAndAuthorByNestedResult">
		select * from t_book b
		left join t_author a
		on a.author_id = b.author_id
		where b.book_id = #{id}
	</select>
	
	<!-- 
		使用存储过程，执行两条查询，返回两个结果集，然后在将结果集映射到对象中
		DELIMITER ;;
		CREATE DEFINER=`root`@`localhost` PROCEDURE `selectBookAndAuthorProcedure`(IN `bookId` int) 入参变量名不要与任何表中字段名重名
		BEGIN
			select * from t_book where book_id = bookId;
			select * from t_author;
		
		END
		;;
		DELIMITER ;
	 -->
	<resultMap type="book" id="bookAndAuthorByProcedure" extends="baseBook">
		<association property="author" resultMap="author" resultSet="author" javaType="author" column="author_id" foreignColumn="author_id" />
	</resultMap>
	<select id="selectBookAndAuthorByProcedure" resultSets="books,author" resultMap="bookAndAuthorByProcedure"
		statementType="CALLABLE">
		{call selectBookAndAuthorProcedure(#{id, mode=IN})}
	</select>
	
	<!-- 
		MyBatis 使用collection处理“多”的关系，类似于association，也分为两种
		1 内嵌select
		2 内嵌result
	 -->
	 
	 <!-- 
	 	内嵌select
	  -->
	 <resultMap type="book" id="bookAndPostsByNestedSelect" extends="baseBook">
	 	<!-- javatype 指定属性类型，ofType指定集合中元素类型 -->
	 	<collection property="posts" select="selectPostByBookId" javaType="list" ofType="post" column="book_id"/>
	 </resultMap>
	 <select id="selectBookAndPostsByNestedSelect" resultMap="bookAndPostsByNestedSelect">
	 	select * from t_book where book_id = #{id};
	 </select>
	 <select id="selectPostByBookId" resultMap="post">
	 	select * from t_post where book_id = #{bookId}
	 </select>
	 
	 
	 <!-- 
	 	内嵌result
	  -->
	<resultMap type="book" id="bookAndPostsByNestedResult" extends="baseBook">
		<collection property="posts" resultMap="post" javaType="list" ofType="post" />
	</resultMap>
	<select id="selectBookAndPostsByNestedResult" resultMap="bookAndPostsByNestedResult">
		select * from t_book b
		left join t_post p
		on b.book_id = p.book_id
		where b.book_id = #{id}
	</select>
	
	<!-- 
		使用存储过程(略)
	 -->
</mapper>